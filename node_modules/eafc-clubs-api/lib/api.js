"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SCHEMAS = exports.EAFCApiService = void 0;
const routes_1 = require("./routes");
const schemas_1 = require("./schemas");
Object.defineProperty(exports, "SCHEMAS", { enumerable: true, get: function () { return schemas_1.SCHEMAS; } });
class EAFCApiService {
    constructor() {
        this.baseUrl = new URL('https://proclubs.ea.com/api/fc/');
        /**
         * Send a GET request to the EAFC API
         *
         * @param endpoint
         * @returns
         */
        this.get = (endpoint, input) => __awaiter(this, void 0, void 0, function* () {
            const route = routes_1.ROUTES[endpoint];
            const url = new URL(route.url, this.baseUrl);
            yield route.schema.validate(input, { strict: true });
            Object.keys(input).forEach(key => {
                url.searchParams.append(key, input[key]);
            });
            const response = yield fetch(url.toString(), {
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/112.0',
                    Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
                    'Accept-Encoding': 'gzip, deflate, br',
                },
                method: 'GET',
            });
            const json = yield response.json();
            return json;
        });
        /**
         * Search for a club by name
         * @param input
         * @returns
         */
        this.searchClub = (input) => __awaiter(this, void 0, void 0, function* () { return this.get('CLUB_SEARCH', input); });
        /**
         * Get the overall stats of the club
         * @param input
         * @returns
         */
        this.overallStats = (input) => __awaiter(this, void 0, void 0, function* () { return this.get('OVERALL_STATS', input); });
        /**
         * Get the career stats of all members of the club
         * @param input
         * @returns
         */
        this.memberCareerStats = (input) => __awaiter(this, void 0, void 0, function* () { return this.get('MEMBER_CAREER_STATS', input); });
        /**
         * Get the career stats of all members of the club
         * @param input
         * @returns
         */
        this.memberStats = (input) => __awaiter(this, void 0, void 0, function* () { return this.get('MEMBER_STATS', input); });
        /**
         * Get the stats of all matches of the club
         * @param input
         * @returns
         */
        this.matchesStats = (input) => __awaiter(this, void 0, void 0, function* () { return this.get('MATCHES_STATS', input); });
        /**
         * Gets information of a club
         * Note that you need to index the response by the `clubId`, e.g. check `examples/clubInfo`
         *
         * @param input
         * @returns
         */
        this.clubInfo = (input) => __awaiter(this, void 0, void 0, function* () { return this.get('CLUB_INFO', input); });
    }
}
exports.EAFCApiService = EAFCApiService;
